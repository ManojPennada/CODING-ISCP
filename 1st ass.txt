//   MCQ :
//same speed for all
//all of the mentioned
//enum nam{.....}
//1
//char array[2][2]
//long
//2 5
//Ram
//3.14 4.14 5.14
//FAIL FAIL FAIL FAIL FAIL


//1st que :

#include<stdio.h>
int main()
{
    int n,i,j,count=0;
    scanf("%d",&n);
    for(i=2;i<=n;i++)
    {
        count= 0;
        for(j=1;j<=i;j++)
        {
            if(i%j == 0)
            count++;
        }
        if(count==2)
        printf("%d ",i);
    }
}

//2nd que:

#include<stdio.h>
long max(long *a,long *b)
{
    if(*a>*b)
    return *a;
    else 
    return *b;
}
int main()
{
    long a,b;
    scanf("%ld %ld",&a,&b);
    printf(" The number %d is larger.  ",max(&a,&b));  
    return 0;
}

//3rd que:

#include<stdio.h>
int main()
{
    int a,b;
    scanf("%d %d",&a,&b);
    printf("%d %d %d %d",a+b,a-b,a*b,a/b);
}

//4th que:

#include<stdio.h>
#define max(a,b) (a>=b)?a:b
int main()
{
    int a,b,c,d;
    scanf("%d %d %d",&a,&b,&c);
    d = max(a,b);
    d = max(d,c);
    printf("%d %d %d\nOutput:\nlargest number is:%d",a,b,c,d);
}


//5th que :

#include<stdio.h>
int main()
{
    int n,ch,r,a[9],i=0,j,d;
    char c[8];
    scanf("%d%d",&n,&ch);
    d =n;
    if (ch == 0){
        for(i=0;i<9;i++)
        a[i] = 0;
        i =0;
        while(n){
            r =n%2;
            a[i] = r;
            n = n/2;
            i++;
        }
        if(d>=8) j =8;
        else j =4;
        for(i=j;i>=0;i--)
        printf("%d",a[i]);
    }
    else if (ch==1){
        i=0;
        while(n){
            r = n%16;
            if(r<10)
            c[i] = r+48;
            else 
            c[i] = r +55;
            n =n/16;
            i++;
        }
        for(j=i-1;j>=0;j--)
        printf("%c",c[j]);
    }
    return 0;
}
